openapi: 3.0.0
info:
  version: latest
  title: League Manager API
  description: This is the API for the League Manager

servers:
  - url: https://api.bthree.uk/leagues/v1
    description: Production server

tags:
  - name: players
    description: Operations about F1 seasons

paths:
  /players:
    get:
      tags:
        - players
      summary: Get all players
      operationId: getPlayers
      parameters:
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/limit_param'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_value'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_id'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_by'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/query_name'
        - $ref: '#/components/parameters/query_year'
      responses:
        '200':
          description: A list of players
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/players_response'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
    post:
      tags:
        - players
      summary: Create a player
      operationId: createPlayer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/player'
      responses:
        '201':
          description: Player created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'

  /players/{id}:
    get:
      tags:
        - players
      summary: Get a player by ID
      operationId: getPlayerByID
      parameters:
        - name: id
          in: path
          description: The ID of the player
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A player
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '404':
          description: Player not found
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
    patch:
      tags:
        - players
      summary: Update a player
      operationId: updatePlayer
      parameters:
        - name: id
          in: path
          description: The ID of the player
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/player'
      responses:
        '200':
          description: Player updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '404':
          description: Player not found
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'

  /teams:
    get:
      tags:
        - teams
      summary: Get all teams
      operationId: getTeams
      parameters:
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/limit_param'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_value'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_id'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_by'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/query_name'
      responses:
        '200':
          description: A list of teams
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/teams_response'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
    post:
      tags:
        - teams
      summary: Create a team
      operationId: createTeam
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/team'
      responses:
        '201':
          description: Team created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'

  /teams/{id}:
    get:
      tags:
        - teams
      summary: Get a team by ID
      operationId: getTeamByID
      parameters:
        - name: id
          in: path
          description: The ID of the team
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A team
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '404':
          description: Team not found
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
    patch:
      tags:
        - teams
      summary: Update a team
      operationId: updateTeam
      parameters:
        - name: id
          in: path
          description: The ID of the team
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/team'
      responses:
        '200':
          description: Team updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/team'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '404':
          description: Team not found
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'

  /seasons:
    get:
      tags:
        - seasons
      summary: Get all seasons
      operationId: getSeasons
      parameters:
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/limit_param'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_value'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_id'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_by'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/query_name'
      responses:
        '200':
          description: A list of seasons
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/seasons_response'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
    post:
      tags:
        - seasons
      summary: Create a season
      operationId: createSeason
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/season'
      responses:
        '201':
          description: Season created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/season'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'

  /seasons/{id}:
    get:
      tags:
        - seasons
      summary: Get a season by ID
      operationId: getSeasonByID
      parameters:
        - name: id
          in: path
          description: The ID of the season
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: A season
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/season'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '404':
          description: Season not found
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
    patch:
      tags:
        - seasons
      summary: Update a season
      operationId: updateSeason
      parameters:
        - name: id
          in: path
          description: The ID of the season
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/season'
      responses:
        '200':
          description: Season updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/season'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '404':
          description: Season not found
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'

  /games:
    get:
      tags:
        - games
      summary: Get all games
      operationId: getGames
      parameters:
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/limit_param'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_value'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/last_id'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_by'
        - $ref: '../../../../vendor/github.com/Jacobbrewer1/pagefilter/common/common.yaml#/components/parameters/sort_direction'
        - $ref: '#/components/parameters/query_date'
        - $ref: '#/components/parameters/query_date_min'
        - $ref: '#/components/parameters/query_date_max'
        - $ref: '#/components/parameters/query_season'
        - $ref: '#/components/parameters/query_team'
      responses:
        '200':
          description: A list of games
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/games_response'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
    post:
      tags:
        - games
      summary: Create a game
      operationId: createGame
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/game'
      responses:
        '201':
          description: Game created
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/message'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '../common/common.yaml#/components/schemas/error_message'

components:
  parameters:
    query_year:
      name: year
      in: query
      description: The year of the season
      required: false
      schema:
        type: integer
        format: int64
    query_year_min:
      name: year_min
      in: query
      description: The minimum year of the season
      required: false
      schema:
        type: integer
        format: int64
    query_year_max:
      name: year_max
      in: query
      description: The maximum year of the season
      required: false
      schema:
        type: integer
        format: int64
    query_name:
      name: name
      in: query
      description: The name to filter by
      required: false
      schema:
        type: string
    query_season:
      name: season
      in: query
      description: The season to filter by
      required: false
      schema:
        type: string
    query_team:
      name: team
      in: query
      description: The team to filter by
      required: false
      schema:
        type: string
    query_date:
      name: date
      in: query
      description: The date to filter by
      required: false
      schema:
        type: string
        format: date
    query_date_min:
      name: date_min
      in: query
      description: The minimum date to filter by
      required: false
      schema:
        type: string
        format: date
    query_date_max:
      name: date_max
      in: query
      description: The maximum date to filter by
      required: false
      schema:
        type: string
        format: date

  schemas:
    players_response:
      type: object
      required:
        - players
        - total
      properties:
        players:
          type: array
          items:
            $ref: '#/components/schemas/player'
        total:
          type: integer
          format: int64

    player:
      type: object
      properties:
        id:
          type: integer
          format: int64
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
          format: email
        date_of_birth:
          type: string
          format: date

    teams_response:
      type: object
      required:
        - teams
        - total
      properties:
        teams:
          type: array
          items:
            $ref: '#/components/schemas/team'
        total:
          type: integer
          format: int64

    team:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        contact_email:
          type: string
          format: email
        contact_phone:
          type: string

    seasons_response:
      type: object
      required:
        - seasons
        - total
      properties:
        seasons:
          type: array
          items:
            $ref: '#/components/schemas/season'
        total:
          type: integer
          format: int64

    season:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string

    games_response:
      type: object
      required:
        - games
        - total
      properties:
        games:
          type: array
          items:
            $ref: '#/components/schemas/game'
        total:
          type: integer
          format: int64

    game:
      type: object
      properties:
        id:
          type: integer
          format: int64
        season:
          $ref: '#/components/schemas/season'
        home_team:
          $ref: '#/components/schemas/game_partnership'
        away_team:
          $ref: '#/components/schemas/game_partnership'
        match_date:
          type: string
          format: datetime
        winning_team:
          $ref: '#/components/schemas/winning_team'

    partnership:
      type: object
      properties:
        player_a:
          $ref: '#/components/schemas/player'
        player_b:
          $ref: '#/components/schemas/player'
        team:
          $ref: '#/components/schemas/team'

    game_partnership:
      type: object
      properties:
        partnership:
          $ref: '#/components/schemas/partnership'
        scores:
          $ref: '#/components/schemas/scores'

    scores:
      type: object
      required:
        - first_set
        - second_set
      properties:
        first_set:
          type: integer
          format: int64
        second_set:
          type: integer
          format: int64
        third_set:
          type: integer
          format: int64

    winning_team:
      type: string
      enum:
        - home
        - away
