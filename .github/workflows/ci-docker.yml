name: Docker

on:
  workflow_call:
    inputs:
      app:
        description: 'App to build'
        required: false
        type: string
        default: 'build-all'
      push:
        description: 'Push to registry'
        required: false
        type: boolean
        default: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  docker-build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions: write-all

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ vars.GO_VERSION }}
          cache-dependency-path: "**/*.sum"

      - name: Install GUM
        run: |
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://repo.charm.sh/apt/gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/charm.gpg
          echo "deb [signed-by=/etc/apt/keyrings/charm.gpg] https://repo.charm.sh/apt/ * *" | sudo tee /etc/apt/sources.list.d/charm.list
          sudo apt update && sudo apt install gum

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build app
        run: |
          export CGO_ENABLED=0
          chmod +x ./docker_build.sh
          FLAGS="-f"
          if [ "${{ github.event.inputs.app }}" == "build-all" ]; then
            FLAGS="$FLAGS -a"
          else
            FLAGS="$FLAGS -b ${{ github.event.inputs.app }}"
          fi
          if [ "${{ github.event.inputs.push }}" == "true" ]; then
            FLAGS="$FLAGS -p"
          fi
          ./docker_build.sh $FLAGS
